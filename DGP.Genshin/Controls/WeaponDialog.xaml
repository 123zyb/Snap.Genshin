<ui:ContentDialog x:Class="DGP.Genshin.Controls.WeaponDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DGP.Genshin.Controls"
             xmlns:ui="http://schemas.modernwpf.com/2019" 
             xmlns:converters="clr-namespace:DGP.Genshin.Controls.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
                  DefaultButton="Primary"
                  Title="{Binding Weapon.WeaponName}"
                  Style="{DynamicResource WeaponDialogStyle}"
                  PrimaryButtonText="确定">
    <ui:ContentDialog.Resources>
        <converters:StarToSolidColorBrushConverter x:Key="StarToSolidColorBrushConverter"/>
        <converters:ElementToImageSourceConverter x:Key="ElementToImageSourceConverter"/>
        <converters:WeaponTypeToNameConverter x:Key="WeaponTypeToNameConverter"/>
        <converters:StarToImageSourceConverter x:Key="StarToImageSourceConverter"/>
        <converters:StatToStringConverter x:Key="AscensionStatToStringConverter"/>
        <converters:StatValueConverter x:Key="StatValueConverter"/>

        <Thickness x:Key="TabViewTopHeaderPadding">8,0,0,0</Thickness>
        <Thickness x:Key="TabViewItemHeaderPadding">12,8,10,8</Thickness>
        
        <Style x:Key="WeaponDialogStyle" TargetType="{x:Type ui:ContentDialog}">
            <Setter Property="Foreground" Value="{DynamicResource ContentDialogForeground}"/>
            <Setter Property="Background" Value="{DynamicResource ContentDialogBackground}"/>
            <Setter Property="BorderThickness" Value="{DynamicResource ContentDialogBorderWidth}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ContentDialogBorderBrush}"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="CornerRadius" Value="{DynamicResource OverlayCornerRadius}"/>
            <Setter Property="PrimaryButtonStyle" Value="{DynamicResource DefaultButtonStyle}"/>
            <Setter Property="SecondaryButtonStyle" Value="{DynamicResource DefaultButtonStyle}"/>
            <Setter Property="CloseButtonStyle" Value="{DynamicResource DefaultButtonStyle}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="IsShadowEnabled" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ui:ContentDialog}">
                        <Border x:Name="Container">
                            <VisualStateManager.CustomVisualStateManager>
                                <ui:SimpleVisualStateManager/>
                            </VisualStateManager.CustomVisualStateManager>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="DialogShowingStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="DialogHidden">
                                            <Storyboard>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="SnapsToDevicePixels" Storyboard.TargetName="LayoutRoot">
                                                    <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
                                                </BooleanAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LayoutRoot">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="LayoutRoot">
                                                    <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
                                                </BooleanAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="LayoutRoot">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.083" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="DialogShowing">
                                            <Storyboard>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="SnapsToDevicePixels" Storyboard.TargetName="LayoutRoot">
                                                    <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
                                                </BooleanAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LayoutRoot">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="LayoutRoot">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.167" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="DialogHidden"/>
                                    <VisualState x:Name="DialogShowing">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LayoutRoot">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(KeyboardNavigation.TabNavigation)" Storyboard.TargetName="BackgroundElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <KeyboardNavigationMode>Cycle</KeyboardNavigationMode>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="DialogShowingWithoutSmokeLayer">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LayoutRoot">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Null}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DialogSizingStates">
                                    <VisualState x:Name="DefaultDialogSizing"/>
                                    <VisualState x:Name="FullDialogSizing">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="VerticalAlignment" Storyboard.TargetName="BackgroundElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <VerticalAlignment>Stretch</VerticalAlignment>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ButtonsVisibilityStates">
                                    <VisualState x:Name="AllVisible"/>
                                    <VisualState x:Name="NoneVisible">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CommandSpace">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PrimaryVisible">
                                        <Storyboard>
                                            <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="PrimaryButton">
                                                <DiscreteInt32KeyFrame KeyTime="0" Value="0"/>
                                            </Int32AnimationUsingKeyFrames>
                                            <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="PrimaryButton">
                                                <DiscreteInt32KeyFrame KeyTime="0" Value="4"/>
                                            </Int32AnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="PrimaryButton">
                                                <DiscreteThicknessKeyFrame KeyTime="0" Value="0,0,0,0"/>
                                            </ThicknessAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="SecondaryButton">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CloseButton">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SecondaryVisible">
                                        <Storyboard>
                                            <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="SecondaryButton">
                                                <DiscreteInt32KeyFrame KeyTime="0" Value="2"/>
                                            </Int32AnimationUsingKeyFrames>
                                            <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="SecondaryButton">
                                                <DiscreteInt32KeyFrame KeyTime="0" Value="2"/>
                                            </Int32AnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="SecondaryButton">
                                                <DiscreteThicknessKeyFrame KeyTime="0" Value="2,0,0,0"/>
                                            </ThicknessAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PrimaryButton">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CloseButton">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CloseVisible">
                                        <Storyboard>
                                            <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="CloseButton">
                                                <DiscreteInt32KeyFrame KeyTime="0" Value="2"/>
                                            </Int32AnimationUsingKeyFrames>
                                            <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="CloseButton">
                                                <DiscreteInt32KeyFrame KeyTime="0" Value="2"/>
                                            </Int32AnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="CloseButton">
                                                <DiscreteThicknessKeyFrame KeyTime="0" Value="2,0,0,0"/>
                                            </ThicknessAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PrimaryButton">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="SecondaryButton">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PrimaryAndSecondaryVisible">
                                        <Storyboard>
                                            <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="PrimaryButton">
                                                <DiscreteInt32KeyFrame KeyTime="0" Value="2"/>
                                            </Int32AnimationUsingKeyFrames>
                                            <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="SecondaryButton">
                                                <DiscreteInt32KeyFrame KeyTime="0" Value="2"/>
                                            </Int32AnimationUsingKeyFrames>
                                            <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="SecondaryButton">
                                                <DiscreteInt32KeyFrame KeyTime="0" Value="2"/>
                                            </Int32AnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="SecondaryButton">
                                                <DiscreteThicknessKeyFrame KeyTime="0" Value="2,0,0,0"/>
                                            </ThicknessAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CloseButton">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PrimaryAndCloseVisible">
                                        <Storyboard>
                                            <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="PrimaryButton">
                                                <DiscreteInt32KeyFrame KeyTime="0" Value="2"/>
                                            </Int32AnimationUsingKeyFrames>
                                            <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="CloseButton">
                                                <DiscreteInt32KeyFrame KeyTime="0" Value="2"/>
                                            </Int32AnimationUsingKeyFrames>
                                            <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="CloseButton">
                                                <DiscreteInt32KeyFrame KeyTime="0" Value="2"/>
                                            </Int32AnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="CloseButton">
                                                <DiscreteThicknessKeyFrame KeyTime="0" Value="2,0,0,0"/>
                                            </ThicknessAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="SecondaryButton">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SecondaryAndCloseVisible">
                                        <Storyboard>
                                            <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="SecondaryButton">
                                                <DiscreteInt32KeyFrame KeyTime="0" Value="0"/>
                                            </Int32AnimationUsingKeyFrames>
                                            <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="SecondaryButton">
                                                <DiscreteInt32KeyFrame KeyTime="0" Value="2"/>
                                            </Int32AnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="SecondaryButton">
                                                <DiscreteThicknessKeyFrame KeyTime="0" Value="0,0,2,0"/>
                                            </ThicknessAnimationUsingKeyFrames>
                                            <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="CloseButton">
                                                <DiscreteInt32KeyFrame KeyTime="0" Value="2"/>
                                            </Int32AnimationUsingKeyFrames>
                                            <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="CloseButton">
                                                <DiscreteInt32KeyFrame KeyTime="0" Value="2"/>
                                            </Int32AnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="CloseButton">
                                                <DiscreteThicknessKeyFrame KeyTime="0" Value="2,0,0,0"/>
                                            </ThicknessAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PrimaryButton">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DefaultButtonStates">
                                    <VisualState x:Name="NoDefaultButton"/>
                                    <VisualState x:Name="PrimaryAsDefaultButton"/>
                                    <VisualState x:Name="SecondaryAsDefaultButton"/>
                                    <VisualState x:Name="CloseAsDefaultButton"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DialogBorderStates">
                                    <VisualState x:Name="NoBorder"/>
                                    <VisualState x:Name="AccentColorBorder">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BackgroundElement">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource SystemControlForegroundAccentBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="LayoutRoot" Background="{DynamicResource SystemControlPageBackgroundMediumAltMediumBrush}" SnapsToDevicePixels="True" Visibility="Collapsed">
                                <Grid x:Name="BackgroundElement" FlowDirection="{TemplateBinding FlowDirection}" HorizontalAlignment="Center" MaxWidth="{DynamicResource ContentDialogMaxWidth}" MaxHeight="{DynamicResource ContentDialogMaxHeight}" MinWidth="{DynamicResource ContentDialogMinWidth}" MinHeight="184" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center">
                                    <ui:ThemeShadowChrome x:Name="Shdw" CornerRadius="{TemplateBinding CornerRadius}" IsShadowEnabled="{TemplateBinding IsShadowEnabled}" Margin="{DynamicResource ContentDialogBorderWidth}"/>
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                        <Border x:Name="DialogSpace" Padding="0">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <!--modify-->
                                                    <Rectangle Fill="{Binding Weapon.Star,Converter={StaticResource StarToSolidColorBrushConverter}}"/>
                                                    <Rectangle Margin="2" Stroke="#33000000" StrokeThickness="2"/>
                                                    <TextBlock Margin="12,0" Text="{Binding Weapon.Type,Converter={StaticResource WeaponTypeToNameConverter}}" Foreground="#FFFFFFFF" Style="{StaticResource BaseTextBlockStyle}" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                                                    <!--end-->
                                                    <ContentControl x:Name="Title" VerticalAlignment="Center" ContentTemplate="{TemplateBinding TitleTemplate}" Content="{TemplateBinding Title}" Foreground="#FFFFFFFF" FontWeight="Medium" FontSize="20" FontFamily="{DynamicResource {x:Static SystemFonts.MessageFontFamilyKey}}" HorizontalAlignment="Left" IsTabStop="False" Margin="8,6" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                        <ContentControl.Template>
                                                            <ControlTemplate TargetType="{x:Type ContentControl}">
                                                                <ui:ContentPresenterEx ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" TextWrapping="Wrap" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </ControlTemplate>
                                                        </ContentControl.Template>
                                                    </ContentControl>
                                                    <ScrollViewer Grid.Row="1" x:Name="ContentScrollViewer" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsTabStop="False" Margin="{DynamicResource ContentDialogContentScrollViewerMargin}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                                        <ui:ContentPresenterEx x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" FontSize="{DynamicResource ControlContentThemeFontSize}" FontFamily="{DynamicResource ContentControlThemeFontFamily}" Margin="{DynamicResource ContentDialogContentMargin}" Grid.Row="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextWrapping="Wrap"/>
                                                    </ScrollViewer>
                                                </Grid>

                                                <Grid x:Name="CommandSpace" KeyboardNavigation.DirectionalNavigation="Contained" HorizontalAlignment="Stretch" Grid.Row="1" VerticalAlignment="Bottom">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition/>
                                                        <ColumnDefinition Width="0.5*"/>
                                                        <ColumnDefinition Width="0.5*"/>
                                                        <ColumnDefinition/>
                                                    </Grid.ColumnDefinitions>
                                                    <Rectangle Fill="{Binding Weapon.Star,Converter={StaticResource StarToSolidColorBrushConverter}}" Grid.ColumnSpan="4" Opacity="0.6"/>
                                                    <Button Height="36" x:Name="PrimaryButton" Foreground="#FFFFFFFF" Background="{Binding Weapon.Star,Converter={StaticResource StarToSolidColorBrushConverter}}" ui:ControlHelper.CornerRadius="0" Content="{TemplateBinding PrimaryButtonText}" Grid.Column="0" HorizontalAlignment="Stretch" IsEnabled="{TemplateBinding IsPrimaryButtonEnabled}" Margin="0,0,0,0" VerticalAlignment="Stretch"/>
                                                    <Button x:Name="SecondaryButton" Grid.ColumnSpan="2" Content="{TemplateBinding SecondaryButtonText}" Grid.Column="1" HorizontalAlignment="Stretch" IsEnabled="{TemplateBinding IsSecondaryButtonEnabled}" Margin="0,0" Style="{TemplateBinding SecondaryButtonStyle}" VerticalAlignment="Stretch"/>
                                                    <Button x:Name="CloseButton" Content="{TemplateBinding CloseButtonText}" Grid.Column="3" HorizontalAlignment="Stretch" Margin="0,0,0,0" Style="{TemplateBinding CloseButtonStyle}" VerticalAlignment="Stretch"/>
                                                </Grid>
                                            </Grid>
                                        </Border>
                                    </Border>
                                </Grid>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsShadowEnabled" Value="False">
                                <Setter Property="Visibility" TargetName="Shdw" Value="Collapsed"/>
                            </Trigger>
                            <!--<Trigger Property="DefaultButton" Value="Primary">
                                <Setter Property="Style" TargetName="PrimaryButton" Value="{DynamicResource AccentButtonStyle}"/>
                            </Trigger>
                            <Trigger Property="DefaultButton" Value="Secondary">
                                <Setter Property="Style" TargetName="SecondaryButton" Value="{DynamicResource AccentButtonStyle}"/>
                            </Trigger>
                            <Trigger Property="DefaultButton" Value="Close">
                                <Setter Property="Style" TargetName="CloseButton" Value="{DynamicResource AccentButtonStyle}"/>
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
            <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}"/>
            <Setter Property="BorderThickness" Value="{DynamicResource ButtonBorderThemeThickness}"/>
            <Setter Property="Padding" Value="8,5,8,6"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}"/>
            <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}"/>
            <Setter Property="ui:FocusVisualHelper.UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}"/>
            <Setter Property="ui:FocusVisualHelper.FocusVisualMargin" Value="-3"/>
            <Setter Property="ui:ControlHelper.CornerRadius" Value="{DynamicResource ControlCornerRadius}"/>
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}" SnapsToDevicePixels="True">
                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}" Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="Background" Value="{DynamicResource ButtonBackgroundPointerOver}"/>
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource ButtonBorderBrushPointerOver}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="Background" Value="{DynamicResource ButtonBackgroundPressed}"/>
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource ButtonBorderBrushPressed}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="Background" Value="{DynamicResource ButtonBackgroundDisabled}"/>
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource ButtonBorderBrushDisabled}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TabItem">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
            <Setter Property="ui:FocusVisualHelper.UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}" />
            <Setter Property="ui:ControlHelper.CornerRadius" Value="{DynamicResource OverlayCornerRadius}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <!-- This item will cover the separator on its left side. -->
                        <ui:ThemeShadowChrome
                        x:Name="Shadow"
                        CornerRadius="{Binding ElementName=TabContainer, Path=CornerRadius}"
                        Depth="{DynamicResource TabViewShadowDepth}"
                        IsShadowEnabled="False">
                            <Border
                            x:Name="LayoutRoot"
                            Padding="{TemplateBinding Padding}"
                            Margin="-1,0,0,0"
                            SnapsToDevicePixels="True">
                                <Grid>
                                    <Border
                                    x:Name="TabSeparator"
                                    HorizontalAlignment="Right"
                                    Width="1"
                                    BorderBrush="{DynamicResource TabViewItemSeparator}"
                                    BorderThickness="1"
                                    Margin="{DynamicResource TabViewItemSeparatorMargin}" />
                                    <Border
                                    x:Name="TabContainer"
                                    Grid.Column="1"
                                    Background="{DynamicResource TabViewItemHeaderBackground}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    ui:FocusVisualHelper.IsTemplateFocusTarget="True"
                                    Padding="{DynamicResource TabViewItemHeaderPadding}"
                                    CornerRadius="4">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Viewbox
                                            x:Name="IconBox"
                                            MaxWidth="{DynamicResource TabViewItemHeaderIconSize}"
                                            MaxHeight="{DynamicResource TabViewItemHeaderIconSize}"
                                            Margin="{DynamicResource TabViewItemHeaderIconMargin}">
                                                <ContentControl
                                                x:Name="IconControl"
                                                Content="{TemplateBinding ui:TabItemHelper.Icon}"
                                                IsTabStop="False"
                                                Foreground="{DynamicResource TabViewItemIconForeground}" />
                                            </Viewbox>
                                            <ContentPresenter
                                            x:Name="ContentPresenter"
                                            Grid.Column="1"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            ContentSource="Header"
                                            TextElement.Foreground="#CC000000"
                                            TextElement.FontWeight="{TemplateBinding FontWeight}"
                                            TextElement.FontSize="{DynamicResource TabViewItemHeaderFontSize}"
                                            Focusable="False"
                                            RecognizesAccessKey="True"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                    </Border>
                                </Grid>
                            </Border>
                        </ui:ThemeShadowChrome>
                        <ControlTemplate.Triggers>
                            <!-- PointerOver -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="TabContainer" Property="Background" Value="{DynamicResource TabViewItemHeaderBackgroundPointerOver}" />
                                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TabViewItemHeaderForegroundPointerOver}" />
                                <Setter TargetName="IconControl" Property="Foreground" Value="{DynamicResource TabViewItemIconForegroundPointerOver}" />
                            </Trigger>
                            <!-- Selected -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Shadow" Property="IsShadowEnabled" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}" />
                                <Setter TargetName="TabContainer" Property="Background" Value="{DynamicResource TabViewItemHeaderBackgroundSelected}" />
                                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TabViewItemHeaderForegroundSelected}" />
                                <Setter TargetName="IconControl" Property="Foreground" Value="{DynamicResource TabViewItemIconForegroundSelected}" />
                                <Setter Property="Panel.ZIndex" Value="1" />
                            </Trigger>
                            <!-- PointerOverSelected -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsSelected" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="TabContainer" Property="Background" Value="{DynamicResource TabViewItemHeaderBackgroundSelected}" />
                                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TabViewItemHeaderForegroundPointerOver}" />
                                <Setter TargetName="IconControl" Property="Foreground" Value="{DynamicResource TabViewItemIconForegroundPointerOver}" />
                                <Setter Property="Panel.ZIndex" Value="1" />
                            </MultiTrigger>
                            <!-- Disabled -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="IconControl" Property="Foreground" Value="{DynamicResource TabViewButtonForegroundDisabled}" />
                                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TabViewItemHeaderForegroundDisabled}" />
                            </Trigger>
                            <!-- NoIcon -->
                            <Trigger Property="ui:TabItemHelper.Icon" Value="{x:Null}">
                                <Setter TargetName="IconBox" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom">
                                <Setter TargetName="TabContainer" Property="CornerRadius" Value="{Binding Path=(ui:ControlHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left">
                                <Setter TargetName="TabSeparator" Property="BorderBrush" Value="{x:Null}" />
                                <Setter TargetName="TabContainer" Property="CornerRadius" Value="{Binding Path=(ui:ControlHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource LeftCornerRadiusFilterConverter}}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right">
                                <Setter TargetName="TabSeparator" Property="BorderBrush" Value="{x:Null}" />
                                <Setter TargetName="TabContainer" Property="CornerRadius" Value="{Binding Path=(ui:ControlHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource RightCornerRadiusFilterConverter}}" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </ui:ContentDialog.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" MaxWidth="210"/>
            <ColumnDefinition Width="70"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="70"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Image Grid.ColumnSpan="2" Source="{Binding Weapon.Star,Converter={StaticResource StarToImageSourceConverter}}" Stretch="Fill"/>
        <Image Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="70"  Height="70" Source="{Binding Weapon.ImageUri}" SnapsToDevicePixels="True" RenderOptions.BitmapScalingMode="Fant"/>

        <StackPanel Margin="8,8,0,4" VerticalAlignment="Bottom">
            <TextBlock Text="{Binding Weapon.SubStat,Converter={StaticResource AscensionStatToStringConverter}}" Foreground="#99FFFFFF" VerticalAlignment="Center" Style="{StaticResource BodyTextBlockStyle}"/>
            <TextBlock Text="{Binding Weapon.SubStatValue,Converter={StaticResource StatValueConverter}}" Foreground="#FFFFFFFF" Style="{StaticResource TitleTextBlockStyle}"/>
        </StackPanel>

        <Grid Grid.Row="2" Grid.ColumnSpan="2" Background="#FFEDE5D8">
            <StackPanel Margin="8">
                <Grid Margin="0,2">
                    <TextBlock HorizontalAlignment="Left" Text="基础攻击力" Style="{StaticResource BodyTextBlockStyle}" Foreground="#CC000000"/>
                    <TextBlock HorizontalAlignment="Right" Text="{Binding Weapon.ATK}" Style="{StaticResource BaseTextBlockStyle}" Foreground="#CC000000"/>
                </Grid>
                <TabControl Margin="0,12,0,6" Padding="0" Background="Transparent">
                    <ui:TabControlHelper.TabStripHeader>
                        <TextBlock VerticalAlignment="Center" Text="精炼" Foreground="#CC000000"/>
                    </ui:TabControlHelper.TabStripHeader>
                    <ui:TabControlHelper.TabStripFooter>
                        <TextBlock VerticalAlignment="Center" Margin="8,0" Text="阶" Foreground="#CC000000"/>
                    </ui:TabControlHelper.TabStripFooter>
                    <TabItem Header="1">
                        <Grid Margin="0,8,0,0">
                            <TextBlock Text="{Binding Weapon.Refine1}" Style="{StaticResource BodyTextBlockStyle}" Foreground="#CC000000"/>
                        </Grid>
                    </TabItem>
                    <TabItem Header="2">
                        <Grid Margin="0,8,0,0">
                            <TextBlock Text="{Binding Weapon.Refine2}" Style="{StaticResource BodyTextBlockStyle}" Foreground="#CC000000"/>
                        </Grid>
                    </TabItem>
                    <TabItem Header="3">
                        <Grid Margin="0,8,0,0">
                            <TextBlock Text="{Binding Weapon.Refine3}" Style="{StaticResource BodyTextBlockStyle}" Foreground="#CC000000"/>
                        </Grid>
                    </TabItem>
                    <TabItem Header="4">
                        <Grid Margin="0,8,0,0">
                            <TextBlock Text="{Binding Weapon.Refine4}" Style="{StaticResource BodyTextBlockStyle}" Foreground="#CC000000"/>
                        </Grid>
                    </TabItem>
                    <TabItem Header="5">
                        <Grid Margin="0,8,0,0">
                            <TextBlock Text="{Binding Weapon.Refine5}" Style="{StaticResource BodyTextBlockStyle}" Foreground="#CC000000"/>
                        </Grid>
                    </TabItem>
                </TabControl>
                <Grid Margin="0,8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Separator/>
                    <TextBlock Margin="6,0" Grid.Column="1" HorizontalAlignment="Center" Text="突破材料" Style="{StaticResource BodyTextBlockStyle}" Foreground="#CC000000"/>
                    <Separator Grid.Column="2"/>
                </Grid>
                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                    <local:MaterialIcon Margin="2" Material="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:WeaponDialog}},Path=Weapon.DailyMaterial}"/>
                    <local:MaterialIcon Margin="2" Material="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:WeaponDialog}},Path=Weapon.EliteMaterial}"/>
                    <local:MaterialIcon Margin="2" Material="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:WeaponDialog}},Path=Weapon.MonsterMaterial}"/>
                </StackPanel>
            </StackPanel>
        </Grid>
    </Grid>
</ui:ContentDialog>
