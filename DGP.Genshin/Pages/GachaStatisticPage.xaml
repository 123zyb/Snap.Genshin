<Page x:Class="DGP.Genshin.Pages.GachaStatisticPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:DGP.Genshin.Pages"
      xmlns:ui="http://schemas.modernwpf.com/2019" 
      xmlns:gachastatistic="clr-namespace:DGP.Genshin.Controls.GachaStatistic"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="GachaStatisticPage"
      Loaded="Page_Loaded">

    <Grid>
        <TabControl Style="{DynamicResource TabControlPivotStyle}">
            <TabControl.Resources>
                <Style x:Key="TabControlPivotStyle" TargetType="{x:Type TabControl}">
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="Background" Value="{DynamicResource PivotBackground}"/>
                    <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}"/>
                    <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}"/>
                    <Setter Property="ItemContainerStyle">
                        <Setter.Value>
                            <Style TargetType="{x:Type TabItem}">
                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                <Setter Property="Background" Value="{DynamicResource PivotHeaderItemBackgroundUnselected}"/>
                                <Setter Property="Padding" Value="{DynamicResource PivotHeaderItemMargin}"/>
                                <Setter Property="Height" Value="48"/>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                                <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}"/>
                                <Setter Property="ui:FocusVisualHelper.UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}"/>
                                <Setter Property="ui:ControlHelper.CornerRadius" Value="{DynamicResource ControlCornerRadius}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type TabItem}">
                                            <Border x:Name="Border" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                                <Grid>
                                                    <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" TextElement.Foreground="{DynamicResource PivotHeaderItemForegroundUnselected}" TextElement.FontWeight="{DynamicResource PivotHeaderItemThemeFontWeight}" Focusable="False" TextElement.FontSize="{DynamicResource PivotHeaderItemFontSize}" TextElement.FontFamily="{DynamicResource PivotHeaderItemFontFamily}" HorizontalAlignment="Stretch" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                                    <Rectangle x:Name="SelectedPipe" Fill="{DynamicResource PivotHeaderItemSelectedPipeFill}" HorizontalAlignment="Stretch" Height="2" Margin="0,0,0,2" VerticalAlignment="Bottom">
                                                        <Rectangle.RadiusY>
                                                            <TemplateBinding Property="ui:ControlHelper.CornerRadius">
                                                                <TemplateBinding.Converter>
                                                                    <ui:CornerRadiusFilterConverter Filter="BottomRightValue" Scale="1"/>
                                                                </TemplateBinding.Converter>
                                                            </TemplateBinding>
                                                        </Rectangle.RadiusY>
                                                        <Rectangle.RadiusX>
                                                            <TemplateBinding Property="ui:ControlHelper.CornerRadius">
                                                                <TemplateBinding.Converter>
                                                                    <ui:CornerRadiusFilterConverter Filter="TopLeftValue" Scale="1"/>
                                                                </TemplateBinding.Converter>
                                                            </TemplateBinding>
                                                        </Rectangle.RadiusX>
                                                    </Rectangle>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="False"/>
                                                        <Condition Property="IsMouseOver" SourceName="Border" Value="False"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Visibility" TargetName="SelectedPipe" Value="Collapsed"/>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="True"/>
                                                        <Condition Property="IsMouseOver" SourceName="Border" Value="False"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Panel.ZIndex" Value="1"/>
                                                    <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource PivotHeaderItemForegroundSelected}"/>
                                                    <Setter Property="Background" TargetName="Border" Value="{DynamicResource PivotHeaderItemBackgroundSelected}"/>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="False"/>
                                                        <Condition Property="IsMouseOver" SourceName="Border" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource PivotHeaderItemForegroundUnselectedPointerOver}"/>
                                                    <Setter Property="Background" TargetName="Border" Value="{DynamicResource PivotHeaderItemBackgroundUnselectedPointerOver}"/>
                                                    <Setter Property="Visibility" TargetName="SelectedPipe" Value="Collapsed"/>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="True"/>
                                                        <Condition Property="IsMouseOver" SourceName="Border" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Panel.ZIndex" Value="1"/>
                                                    <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource PivotHeaderItemForegroundSelectedPointerOver}"/>
                                                    <Setter Property="Background" TargetName="Border" Value="{DynamicResource PivotHeaderItemBackgroundSelectedPointerOver}"/>
                                                </MultiTrigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource PivotHeaderItemForegroundDisabled}"/>
                                                    <Setter Property="Background" TargetName="Border" Value="{DynamicResource PivotHeaderItemBackgroundDisabled}"/>
                                                    <Setter Property="Visibility" TargetName="SelectedPipe" Value="Collapsed"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabControl}">
                                <ControlTemplate.Resources>
                                    <StreamGeometry x:Key="ChevronRight">M5.029297,19.091797L14.111328,10 5.029297,0.908203 5.908203,0.029297 15.888672,10 5.908203,19.970703z</StreamGeometry>
                                    <StreamGeometry x:Key="ChevronLeft">M14.091797,19.970703L4.111328,10 14.091797,0.029297 14.970703,0.908203 5.888672,10 14.970703,19.091797z</StreamGeometry>
                                </ControlTemplate.Resources>
                                <Grid x:Name="templateRoot" Background="{TemplateBinding Background}" ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                                    <Grid.Resources>
                                        <Style x:Key="TitleContentControlStyle" TargetType="{x:Type ContentControl}">
                                            <Setter Property="FontFamily" Value="{DynamicResource PivotTitleFontFamily}"/>
                                            <Setter Property="FontWeight" Value="{DynamicResource PivotTitleThemeFontWeight}"/>
                                            <Setter Property="FontSize" Value="{DynamicResource PivotTitleFontSize}"/>
                                            <Style.BasedOn>
                                                <Style TargetType="{x:Type ContentControl}">
                                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                    <Setter Property="VerticalContentAlignment" Value="Top"/>
                                                    <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MessageFontFamilyKey}}"/>
                                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ContentControl}">
                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Style.BasedOn>
                                        </Style>
                                        <Style x:Key="BaseContentControlStyle" TargetType="{x:Type ContentControl}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="VerticalContentAlignment" Value="Top"/>
                                            <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MessageFontFamilyKey}}"/>
                                            <Setter Property="FontWeight" Value="SemiBold"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ContentControl}">
                                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Grid.Resources>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <ContentControl x:Name="TitleContentControl" ContentTemplate="{TemplateBinding ui:PivotHelper.TitleTemplate}" Content="{TemplateBinding ui:PivotHelper.Title}" IsTabStop="False" Margin="{DynamicResource PivotPortraitThemePadding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="Collapsed">
                                        <ContentControl.Style>
                                            <Style TargetType="{x:Type ContentControl}">
                                                <Setter Property="FontFamily" Value="{DynamicResource PivotTitleFontFamily}"/>
                                                <Setter Property="FontWeight" Value="{DynamicResource PivotTitleThemeFontWeight}"/>
                                                <Setter Property="FontSize" Value="{DynamicResource PivotTitleFontSize}"/>
                                                <Style.BasedOn>
                                                    <Style TargetType="{x:Type ContentControl}">
                                                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                        <Setter Property="VerticalContentAlignment" Value="Top"/>
                                                        <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MessageFontFamilyKey}}"/>
                                                        <Setter Property="FontWeight" Value="SemiBold"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ContentControl}">
                                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Style.BasedOn>
                                            </Style>
                                        </ContentControl.Style>
                                    </ContentControl>
                                    <Grid Margin="{TemplateBinding Padding}" Grid.Row="1">
                                        <Grid.Resources>
                                            <ControlTemplate x:Key="PreviousTemplate" TargetType="{x:Type ButtonBase}">
                                                <Border x:Name="Root" BorderBrush="{DynamicResource PivotPreviousButtonBorderBrush}" BorderThickness="{DynamicResource PivotNavButtonBorderThemeThickness}" Background="{DynamicResource PivotPreviousButtonBackground}">
                                                    <ui:FontIconFallback x:Name="Arrow" Data="M14.091797,19.970703L4.111328,10 14.091797,0.029297 14.970703,0.908203 5.888672,10 14.970703,19.091797z" Foreground="{DynamicResource PivotPreviousButtonForeground}" FontSize="12" FontFamily="{DynamicResource SymbolThemeFontFamily}" HorizontalAlignment="Center" UseLayoutRounding="False" VerticalAlignment="Center"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" TargetName="Root" Value="{DynamicResource PivotPreviousButtonBackgroundPointerOver}"/>
                                                        <Setter Property="BorderBrush" TargetName="Root" Value="{DynamicResource PivotPreviousButtonBorderBrushPointerOver}"/>
                                                        <Setter Property="Foreground" TargetName="Arrow" Value="{DynamicResource PivotPreviousButtonForegroundPointerOver}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Background" TargetName="Root" Value="{DynamicResource PivotPreviousButtonBackgroundPressed}"/>
                                                        <Setter Property="BorderBrush" TargetName="Root" Value="{DynamicResource PivotPreviousButtonBorderBrushPressed}"/>
                                                        <Setter Property="Foreground" TargetName="Arrow" Value="{DynamicResource PivotPreviousButtonForegroundPressed}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                            <ControlTemplate x:Key="NextTemplate" TargetType="{x:Type ButtonBase}">
                                                <Border x:Name="Root" BorderBrush="{DynamicResource PivotNextButtonBorderBrush}" BorderThickness="{DynamicResource PivotNavButtonBorderThemeThickness}" Background="{DynamicResource PivotNextButtonBackground}">
                                                    <ui:FontIconFallback x:Name="Arrow" Data="M5.029297,19.091797L14.111328,10 5.029297,0.908203 5.908203,0.029297 15.888672,10 5.908203,19.970703z" Foreground="{DynamicResource PivotNextButtonForeground}" FontSize="12" FontFamily="{DynamicResource SymbolThemeFontFamily}" HorizontalAlignment="Center" UseLayoutRounding="False" VerticalAlignment="Center"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" TargetName="Root" Value="{DynamicResource PivotNextButtonBackgroundPointerOver}"/>
                                                        <Setter Property="BorderBrush" TargetName="Root" Value="{DynamicResource PivotNextButtonBorderBrushPointerOver}"/>
                                                        <Setter Property="Foreground" TargetName="Arrow" Value="{DynamicResource PivotNextButtonForegroundPointerOver}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Background" TargetName="Root" Value="{DynamicResource PivotNextButtonBackgroundPressed}"/>
                                                        <Setter Property="BorderBrush" TargetName="Root" Value="{DynamicResource PivotNextButtonBorderBrushPressed}"/>
                                                        <Setter Property="Foreground" TargetName="Arrow" Value="{DynamicResource PivotNextButtonForegroundPressed}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Grid.Resources>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <Grid x:Name="headerPanel" Background="{TemplateBinding Background}" Grid.Row="0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <ContentPresenter x:Name="LeftHeaderPresenter" ContentTemplate="{TemplateBinding ui:PivotHelper.LeftHeaderTemplate}" Content="{TemplateBinding ui:PivotHelper.LeftHeader}" HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch"/>
                                            <ui:PivotHeaderScrollViewer x:Name="ScrollViewer" Grid.Column="1" HorizontalScrollBarVisibility="Hidden" Style="{DynamicResource {x:Type ScrollViewer}}" Template="{DynamicResource ScrollViewerScrollBarlessTemplate}" VerticalScrollBarVisibility="Disabled" VerticalContentAlignment="Stretch">
                                                <StackPanel Background="{DynamicResource PivotHeaderBackground}" KeyboardNavigation.DirectionalNavigation="Contained" IsItemsHost="True" Orientation="Horizontal" KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Once" Panel.ZIndex="1"/>
                                            </ui:PivotHeaderScrollViewer>
                                            <RepeatButton x:Name="PreviousButton" Background="Transparent" Grid.Column="1" CommandTarget="{Binding ElementName=ScrollViewer}" Command="ScrollBar.LineLeftCommand" FocusVisualStyle="{x:Null}" HorizontalAlignment="Left" Height="36" IsTabStop="False" IsEnabled="False" Margin="{DynamicResource PivotNavButtonMargin}" Opacity="0" VerticalAlignment="Top" Width="20">
                                                <RepeatButton.Template>
                                                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                        <Border x:Name="Root" BorderBrush="{DynamicResource PivotPreviousButtonBorderBrush}" BorderThickness="{DynamicResource PivotNavButtonBorderThemeThickness}" Background="{DynamicResource PivotPreviousButtonBackground}">
                                                            <ui:FontIconFallback x:Name="Arrow" Data="M14.091797,19.970703L4.111328,10 14.091797,0.029297 14.970703,0.908203 5.888672,10 14.970703,19.091797z" Foreground="{DynamicResource PivotPreviousButtonForeground}" FontSize="12" FontFamily="{DynamicResource SymbolThemeFontFamily}" HorizontalAlignment="Center" UseLayoutRounding="False" VerticalAlignment="Center"/>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Background" TargetName="Root" Value="{DynamicResource PivotPreviousButtonBackgroundPointerOver}"/>
                                                                <Setter Property="BorderBrush" TargetName="Root" Value="{DynamicResource PivotPreviousButtonBorderBrushPointerOver}"/>
                                                                <Setter Property="Foreground" TargetName="Arrow" Value="{DynamicResource PivotPreviousButtonForegroundPointerOver}"/>
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Background" TargetName="Root" Value="{DynamicResource PivotPreviousButtonBackgroundPressed}"/>
                                                                <Setter Property="BorderBrush" TargetName="Root" Value="{DynamicResource PivotPreviousButtonBorderBrushPressed}"/>
                                                                <Setter Property="Foreground" TargetName="Arrow" Value="{DynamicResource PivotPreviousButtonForegroundPressed}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </RepeatButton.Template>
                                            </RepeatButton>
                                            <RepeatButton x:Name="NextButton" Background="Transparent" Grid.Column="1" CommandTarget="{Binding ElementName=ScrollViewer}" Command="ScrollBar.LineRightCommand" FocusVisualStyle="{x:Null}" HorizontalAlignment="Right" Height="36" IsTabStop="False" IsEnabled="False" Margin="{DynamicResource PivotNavButtonMargin}" Opacity="0" VerticalAlignment="Top" Width="20">
                                                <RepeatButton.Template>
                                                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                        <Border x:Name="Root" BorderBrush="{DynamicResource PivotNextButtonBorderBrush}" BorderThickness="{DynamicResource PivotNavButtonBorderThemeThickness}" Background="{DynamicResource PivotNextButtonBackground}">
                                                            <ui:FontIconFallback x:Name="Arrow" Data="M5.029297,19.091797L14.111328,10 5.029297,0.908203 5.908203,0.029297 15.888672,10 5.908203,19.970703z" Foreground="{DynamicResource PivotNextButtonForeground}" FontSize="12" FontFamily="{DynamicResource SymbolThemeFontFamily}" HorizontalAlignment="Center" UseLayoutRounding="False" VerticalAlignment="Center"/>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Background" TargetName="Root" Value="{DynamicResource PivotNextButtonBackgroundPointerOver}"/>
                                                                <Setter Property="BorderBrush" TargetName="Root" Value="{DynamicResource PivotNextButtonBorderBrushPointerOver}"/>
                                                                <Setter Property="Foreground" TargetName="Arrow" Value="{DynamicResource PivotNextButtonForegroundPointerOver}"/>
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Background" TargetName="Root" Value="{DynamicResource PivotNextButtonBackgroundPressed}"/>
                                                                <Setter Property="BorderBrush" TargetName="Root" Value="{DynamicResource PivotNextButtonBorderBrushPressed}"/>
                                                                <Setter Property="Foreground" TargetName="Arrow" Value="{DynamicResource PivotNextButtonForegroundPressed}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </RepeatButton.Template>
                                            </RepeatButton>
                                            <ContentPresenter x:Name="RightHeaderPresenter" ContentTemplate="{TemplateBinding ui:PivotHelper.RightHeaderTemplate}" Content="{TemplateBinding ui:PivotHelper.RightHeader}" Grid.Column="2" HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch"/>
                                        </Grid>
                                        <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentTemplate="{TemplateBinding SelectedContentTemplate}" Content="{TemplateBinding SelectedContent}" ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" ContentSource="SelectedContent" Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Border>
                                    </Grid>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="HasContent" SourceName="TitleContentControl" Value="True">
                                        <Setter Property="Visibility" TargetName="TitleContentControl" Value="Visible"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" SourceName="headerPanel" Value="True"/>
                                            <Condition Property="IsMouseOver" SourceName="contentPanel" Value="False"/>
                                            <Condition Property="CanScrollLeft" SourceName="ScrollViewer" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Opacity" TargetName="PreviousButton" Value="1"/>
                                        <Setter Property="IsEnabled" TargetName="PreviousButton" Value="True"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" SourceName="headerPanel" Value="True"/>
                                            <Condition Property="IsMouseOver" SourceName="contentPanel" Value="False"/>
                                            <Condition Property="CanScrollRight" SourceName="ScrollViewer" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Opacity" TargetName="NextButton" Value="1"/>
                                        <Setter Property="IsEnabled" TargetName="NextButton" Value="True"/>
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>
            <ui:PivotHelper.RightHeader>
                <Button Content="&#xE72C;" ToolTip="刷新">
                    <Button.Resources>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="{DynamicResource NavigationViewBackButtonBackground}"/>
                            <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}"/>
                            <Setter Property="FontFamily" Value="{DynamicResource SymbolThemeFontFamily}"/>
                            <Setter Property="FontSize" Value="16"/>
                            <Setter Property="Height" Value="48"/>
                            <Setter Property="Width" Value="48"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}"/>
                            <Setter Property="ui:FocusVisualHelper.UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}"/>
                            <Setter Property="ui:FocusVisualHelper.FocusVisualMargin" Value="0"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                            <TextBlock x:Name="Content" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="RootGrid" Value="{DynamicResource NavigationViewButtonBackgroundPointerOver}"/>
                                                <Setter Property="Foreground" TargetName="Content" Value="{DynamicResource NavigationViewButtonForegroundPointerOver}"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Background" TargetName="RootGrid" Value="{DynamicResource NavigationViewButtonBackgroundPressed}"/>
                                                <Setter Property="Foreground" TargetName="Content" Value="{DynamicResource NavigationViewButtonForegroundPressed}"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Foreground" TargetName="Content" Value="{DynamicResource NavigationViewButtonForegroundDisabled}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.BasedOn>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}"/>
                                    <Setter Property="BorderThickness" Value="{DynamicResource ButtonBorderThemeThickness}"/>
                                    <Setter Property="Padding" Value="8,5,8,6"/>
                                    <Setter Property="HorizontalAlignment" Value="Left"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}"/>
                                    <Setter Property="FontWeight" Value="Normal"/>
                                    <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}"/>
                                    <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}"/>
                                    <Setter Property="ui:FocusVisualHelper.UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}"/>
                                    <Setter Property="ui:FocusVisualHelper.FocusVisualMargin" Value="-3"/>
                                    <Setter Property="ui:ControlHelper.CornerRadius" Value="{DynamicResource ControlCornerRadius}"/>
                                    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}" SnapsToDevicePixels="True">
                                                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}" Padding="{TemplateBinding Padding}">
                                                        <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    </Border>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" TargetName="Background" Value="{DynamicResource ButtonBackgroundPointerOver}"/>
                                                        <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource ButtonBorderBrushPointerOver}"/>
                                                        <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource ButtonForegroundPointerOver}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Background" TargetName="Background" Value="{DynamicResource ButtonBackgroundPressed}"/>
                                                        <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource ButtonBorderBrushPressed}"/>
                                                        <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource ButtonForegroundPressed}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Background" TargetName="Background" Value="{DynamicResource ButtonBackgroundDisabled}"/>
                                                        <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource ButtonBorderBrushDisabled}"/>
                                                        <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource ButtonForegroundDisabled}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Style.BasedOn>
                        </Style>
                    </Button.Resources>
                </Button>
            </ui:PivotHelper.RightHeader>
            <TabItem Header="常驻">
                <Grid Margin="12,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <gachastatistic:ProbabilityPresenter VerticalAlignment="Top" ProbabilitySource="{Binding NormalPoolSource,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:GachaStatisticPage}}}"/>
                    <ui:GridView Grid.Row="1" ItemsSource="{Binding NormalPool}" />
                </Grid>
            </TabItem>
            <TabItem Header="新手">
                <Grid Margin="12,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <gachastatistic:ProbabilityPresenter VerticalAlignment="Top" ProbabilitySource="{Binding NovicePoolSource,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GachaStatisticPage}}}"/>
                    <ui:GridView Grid.Row="1" ItemsSource="{Binding NovicePool}" />
                </Grid>
            </TabItem>
            <TabItem Header="角色">
                <Grid Margin="12,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <gachastatistic:ProbabilityPresenter VerticalAlignment="Top" ProbabilitySource="{Binding CharacterPoolSource,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GachaStatisticPage}}}"/>
                    <ui:GridView Grid.Row="1" ItemsSource="{Binding CharacterPool}" />
                </Grid>
            </TabItem>
            <TabItem Header="武器">
                <Grid Margin="12,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <gachastatistic:ProbabilityPresenter VerticalAlignment="Top" ProbabilitySource="{Binding WeaponPoolSource,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GachaStatisticPage}}}"/>
                    <ui:GridView Grid.Row="1" ItemsSource="{Binding WeaponPool}" />
                </Grid>

            </TabItem>
        </TabControl>
    </Grid>
</Page>
